<?xml version="1.0" encoding="UTF-8"?><testrun name="java (1)" project="jacoco-plugin-master" tests="121" started="121" failures="3" errors="0" ignored="1">
  <testsuite name="hudson.plugins.jacococoveragecolumn.BranchCoverageColumnTest" time="0.561">
    <testcase name="testDescriptor" classname="hudson.plugins.jacococoveragecolumn.BranchCoverageColumnTest" time="0.048"/>
    <testcase name="testGetPercentWithBuildAndAction" classname="hudson.plugins.jacococoveragecolumn.BranchCoverageColumnTest" time="0.512"/>
  </testsuite>
  <testsuite name="hudson.plugins.jacoco.report.PackageReportTest" time="0.001">
    <testcase name="testChildren" classname="hudson.plugins.jacoco.report.PackageReportTest" time="0.0"/>
    <testcase name="testName" classname="hudson.plugins.jacoco.report.PackageReportTest" time="0.0"/>
    <testcase name="testChildrenRemovePkgName" classname="hudson.plugins.jacoco.report.PackageReportTest" time="0.001"/>
  </testsuite>
  <testsuite name="hudson.plugins.jacoco.report.SourceFileReportTest" time="0.0">
    <testcase name="test" classname="hudson.plugins.jacoco.report.SourceFileReportTest" time="0.0"/>
  </testsuite>
  <testsuite name="hudson.plugins.jacoco.CoverageReportTest" time="0.014">
    <testcase name="testClassReport" classname="hudson.plugins.jacoco.CoverageReportTest" time="0.0"/>
    <testcase name="testLoad" classname="hudson.plugins.jacoco.CoverageReportTest" time="0.001"/>
    <testcase name="testLoadMultipleReports" classname="hudson.plugins.jacoco.CoverageReportTest" time="0.0"/>
    <testcase name="testPackageReport" classname="hudson.plugins.jacoco.CoverageReportTest" time="0.0"/>
    <testcase name="testCoverageReport" classname="hudson.plugins.jacoco.CoverageReportTest" time="0.0"/>
    <testcase name="testEmptyPackage" classname="hudson.plugins.jacoco.CoverageReportTest" time="0.013"/>
    <testcase name="testSourceFileReport" classname="hudson.plugins.jacoco.CoverageReportTest" time="0.0" ignored="true"/>
    <testcase name="testMethodReport" classname="hudson.plugins.jacoco.CoverageReportTest" time="0.0"/>
  </testsuite>
  <testsuite name="hudson.plugins.jacoco.ExecutionFileLoaderTest" time="0.52">
    <testcase name="testLoadBundleCoverageNoIncludes" classname="hudson.plugins.jacoco.ExecutionFileLoaderTest" time="0.319"/>
    <testcase name="testLoadBundleCoverageClassDirectoryNotExists" classname="hudson.plugins.jacoco.ExecutionFileLoaderTest" time="0.0"/>
    <testcase name="testLoadBundleWithoutClasses" classname="hudson.plugins.jacoco.ExecutionFileLoaderTest" time="0.014">
      <failure>java.lang.AssertionError: This test requires that a jacoco.exec file exists in the target-directory
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at hudson.plugins.jacoco.ExecutionFileLoaderTest.testLoadBundleWithoutClasses(ExecutionFileLoaderTest.java:146)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)

</failure>
    </testcase>
    <testcase name="testLoadBundleCoverageWithIncludes" classname="hudson.plugins.jacoco.ExecutionFileLoaderTest" time="0.008"/>
    <testcase name="test" classname="hudson.plugins.jacoco.ExecutionFileLoaderTest" time="0.001"/>
    <testcase name="testLoadBundleWithMissingExecFile" classname="hudson.plugins.jacoco.ExecutionFileLoaderTest" time="0.001">
      <failure>java.lang.AssertionError: This test requires that a jacoco.exec file exists in the target-directory
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at hudson.plugins.jacoco.ExecutionFileLoaderTest.testLoadBundleWithMissingExecFile(ExecutionFileLoaderTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)

</failure>
    </testcase>
    <testcase name="testLoadBundleCoverageNoIncludes2" classname="hudson.plugins.jacoco.ExecutionFileLoaderTest" time="0.108"/>
    <testcase name="testLoadBundleCoverageNoIncludes3" classname="hudson.plugins.jacoco.ExecutionFileLoaderTest" time="0.068"/>
    <testcase name="testLoadBundleWithExecFile" classname="hudson.plugins.jacoco.ExecutionFileLoaderTest" time="0.001">
      <failure>java.lang.AssertionError: This test requires that a jacoco.exec file exists in the target-directory
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at hudson.plugins.jacoco.ExecutionFileLoaderTest.testLoadBundleWithExecFile(ExecutionFileLoaderTest.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)

</failure>
    </testcase>
  </testsuite>
  <testsuite name="hudson.plugins.jacoco.model.CoverageGraphLayoutTest" time="0.01">
    <testcase name="type" classname="hudson.plugins.jacoco.model.CoverageGraphLayoutTest" time="0.007"/>
    <testcase name="value" classname="hudson.plugins.jacoco.model.CoverageGraphLayoutTest" time="0.003"/>
  </testsuite>
  <testsuite name="hudson.plugins.jacoco.portlet.utils.UtilsParameterizedTest" time="0.001">
    <testsuite name="[0]" time="0.0">
      <testcase name="testValidateCharAttributes[0]" classname="hudson.plugins.jacoco.portlet.utils.UtilsParameterizedTest" time="0.0"/>
    </testsuite>
    <testsuite name="[1]" time="0.001">
      <testcase name="testValidateCharAttributes[1]" classname="hudson.plugins.jacoco.portlet.utils.UtilsParameterizedTest" time="0.001"/>
    </testsuite>
    <testsuite name="[2]" time="0.0">
      <testcase name="testValidateCharAttributes[2]" classname="hudson.plugins.jacoco.portlet.utils.UtilsParameterizedTest" time="0.0"/>
    </testsuite>
    <testsuite name="[3]" time="0.0">
      <testcase name="testValidateCharAttributes[3]" classname="hudson.plugins.jacoco.portlet.utils.UtilsParameterizedTest" time="0.0"/>
    </testsuite>
    <testsuite name="[4]" time="0.0">
      <testcase name="testValidateCharAttributes[4]" classname="hudson.plugins.jacoco.portlet.utils.UtilsParameterizedTest" time="0.0"/>
    </testsuite>
    <testsuite name="[5]" time="0.0">
      <testcase name="testValidateCharAttributes[5]" classname="hudson.plugins.jacoco.portlet.utils.UtilsParameterizedTest" time="0.0"/>
    </testsuite>
  </testsuite>
  <testsuite name="hudson.plugins.jacoco.portlet.chart.JacocoBuilderTrendChartTest" time="0.005">
    <testcase name="descriptor" classname="hudson.plugins.jacoco.portlet.chart.JacocoBuilderTrendChartTest" time="0.005"/>
    <testcase name="construct" classname="hudson.plugins.jacoco.portlet.chart.JacocoBuilderTrendChartTest" time="0.0"/>
  </testsuite>
  <testsuite name="hudson.plugins.jacoco.CoverageTest" time="0.002">
    <testcase name="testPercentageCalculation" classname="hudson.plugins.jacoco.CoverageTest" time="0.0"/>
    <testcase name="testHalfCoverage" classname="hudson.plugins.jacoco.CoverageTest" time="0.001"/>
    <testcase name="testFullCoverage" classname="hudson.plugins.jacoco.CoverageTest" time="0.0"/>
    <testcase name="testUninitialized" classname="hudson.plugins.jacoco.CoverageTest" time="0.0"/>
    <testcase name="testStringRepresentation" classname="hudson.plugins.jacoco.CoverageTest" time="0.001"/>
    <testcase name="testNormalConstructorInitializes" classname="hudson.plugins.jacoco.CoverageTest" time="0.0"/>
    <testcase name="testVacuousCoverage" classname="hudson.plugins.jacoco.CoverageTest" time="0.0"/>
    <testcase name="testAccumulateInitializes" classname="hudson.plugins.jacoco.CoverageTest" time="0.0"/>
  </testsuite>
  <testsuite name="hudson.plugins.jacococoveragecolumn.AbstractJaCoCoCoverageColumnTest" time="0.02">
    <testcase name="testGetPercentWithLastSuccessfulBuild" classname="hudson.plugins.jacococoveragecolumn.AbstractJaCoCoCoverageColumnTest" time="0.003"/>
    <testcase name="testGetColorWithNull" classname="hudson.plugins.jacococoveragecolumn.AbstractJaCoCoCoverageColumnTest" time="0.0"/>
    <testcase name="testGeColor" classname="hudson.plugins.jacococoveragecolumn.AbstractJaCoCoCoverageColumnTest" time="0.014"/>
    <testcase name="testGetFillColor100" classname="hudson.plugins.jacococoveragecolumn.AbstractJaCoCoCoverageColumnTest" time="0.001"/>
    <testcase name="testGetPercentWithNoLastSuccessfulBuild" classname="hudson.plugins.jacococoveragecolumn.AbstractJaCoCoCoverageColumnTest" time="0.0"/>
    <testcase name="testGetFillColorWithNull" classname="hudson.plugins.jacococoveragecolumn.AbstractJaCoCoCoverageColumnTest" time="0.0"/>
    <testcase name="testGetPercentWithBuildAndAction" classname="hudson.plugins.jacococoveragecolumn.AbstractJaCoCoCoverageColumnTest" time="0.001"/>
  </testsuite>
  <testsuite name="hudson.plugins.jacoco.report.SourceAnnotatorTest" time="0.013">
    <testcase name="testSourceAnnotatorSimple" classname="hudson.plugins.jacoco.report.SourceAnnotatorTest" time="0.005"/>
    <testcase name="testMissingFile" classname="hudson.plugins.jacoco.report.SourceAnnotatorTest" time="0.002"/>
    <testcase name="testSourceAnnotator" classname="hudson.plugins.jacoco.report.SourceAnnotatorTest" time="0.006"/>
  </testsuite>
  <testsuite name="hudson.plugins.jacoco.JacocoConfigSubmitTest" time="0.001">
    <testcase name="testHealthReportMaxValue" classname="hudson.plugins.jacoco.JacocoConfigSubmitTest" time="0.0"/>
    <testcase name="testHealthReportDefaultMaxValue" classname="hudson.plugins.jacoco.JacocoConfigSubmitTest" time="0.001"/>
    <testcase name="testIncludeIsEmpty" classname="hudson.plugins.jacoco.JacocoConfigSubmitTest" time="0.0"/>
    <testcase name="testHealthReportMinValue" classname="hudson.plugins.jacoco.JacocoConfigSubmitTest" time="0.0"/>
    <testcase name="testIncludeIsSet" classname="hudson.plugins.jacoco.JacocoConfigSubmitTest" time="0.0"/>
  </testsuite>
  <testsuite name="hudson.plugins.jacococoveragecolumn.JaCoCoColumnTest" time="0.376">
    <testcase name="testDescriptor" classname="hudson.plugins.jacococoveragecolumn.JaCoCoColumnTest" time="0.001"/>
    <testcase name="testGetPercentWithBuildAndAction" classname="hudson.plugins.jacococoveragecolumn.JaCoCoColumnTest" time="0.375"/>
  </testsuite>
  <testsuite name="hudson.plugins.jacoco.model.CoverageObjectGraphTest" time="1.233">
    <testcase name="multipleAccessAndDifferentCoverageType" classname="hudson.plugins.jacoco.model.CoverageObjectGraphTest" time="0.795"/>
    <testcase name="singeBuildCoverage" classname="hudson.plugins.jacoco.model.CoverageObjectGraphTest" time="0.057"/>
    <testcase name="baseStroke" classname="hudson.plugins.jacoco.model.CoverageObjectGraphTest" time="0.123"/>
    <testcase name="simpleLineCoverage" classname="hudson.plugins.jacoco.model.CoverageObjectGraphTest" time="0.083"/>
    <testcase name="crop5" classname="hudson.plugins.jacoco.model.CoverageObjectGraphTest" time="0.085"/>
    <testcase name="crop100" classname="hudson.plugins.jacoco.model.CoverageObjectGraphTest" time="0.035"/>
    <testcase name="skipZero" classname="hudson.plugins.jacoco.model.CoverageObjectGraphTest" time="0.055"/>
  </testsuite>
  <testsuite name="hudson.plugins.jacoco.portlet.utils.UtilsComparisonTest" time="0.001">
    <testcase name="logicalAndOfResultsTest" classname="hudson.plugins.jacoco.portlet.utils.UtilsComparisonTest" time="0.001"/>
  </testsuite>
  <testsuite name="hudson.plugins.jacoco.JacocoHealthReportDeltaThresholdsTest" time="0.003">
    <testcase name="halfRoundUpTest" classname="hudson.plugins.jacoco.JacocoHealthReportDeltaThresholdsTest" time="0.001"/>
    <testcase name="changeTooBigToHundredTest" classname="hudson.plugins.jacoco.JacocoHealthReportDeltaThresholdsTest" time="0.0"/>
    <testcase name="halfRoundDownTest" classname="hudson.plugins.jacoco.JacocoHealthReportDeltaThresholdsTest" time="0.0"/>
    <testcase name="changeNegativeThToZeroTest" classname="hudson.plugins.jacoco.JacocoHealthReportDeltaThresholdsTest" time="0.001"/>
    <testcase name="scaleToSixTest" classname="hudson.plugins.jacoco.JacocoHealthReportDeltaThresholdsTest" time="0.001"/>
  </testsuite>
  <testsuite name="hudson.plugins.jacoco.JacocoBuildActionTest" time="0.007">
    <testcase name="testConstructNonExistingTestDir" classname="hudson.plugins.jacoco.JacocoBuildActionTest" time="0.003"/>
    <testcase name="testConstruct" classname="hudson.plugins.jacoco.JacocoBuildActionTest" time="0.004"/>
  </testsuite>
  <testsuite name="hudson.plugins.jacoco.portlet.utils.UtilsHudsonTest" time="20.456">
    <testcase name="testRoundFloat" classname="hudson.plugins.jacoco.portlet.utils.UtilsHudsonTest" time="13.306"/>
    <testcase name="testGetLastDate" classname="hudson.plugins.jacoco.portlet.utils.UtilsHudsonTest" time="7.15"/>
  </testsuite>
  <testsuite name="hudson.plugins.jacoco.BuildOverBuildTest" time="0.089">
    <testcase name="checkBuildOverBuildFailureTest" classname="hudson.plugins.jacoco.BuildOverBuildTest" time="0.085"/>
    <testcase name="checkBuildOverBuildSuccessTest" classname="hudson.plugins.jacoco.BuildOverBuildTest" time="0.004"/>
  </testsuite>
  <testsuite name="hudson.plugins.jacoco.portlet.JacocoLoadDataHudsonTest" time="5.89">
    <testcase name="testGetResultSummary" classname="hudson.plugins.jacoco.portlet.JacocoLoadDataHudsonTest" time="5.89"/>
  </testsuite>
  <testsuite name="hudson.plugins.jacoco.JacocoPublisherTest" time="1.19">
    <testcase name="testConstruct" classname="hudson.plugins.jacoco.JacocoPublisherTest" time="0.073"/>
    <testcase name="testGetterSetter" classname="hudson.plugins.jacoco.JacocoPublisherTest" time="0.048"/>
    <testcase name="testSaveCoverageReports" classname="hudson.plugins.jacoco.JacocoPublisherTest" time="0.137"/>
    <testcase name="testResolveFilePathsNoReplace" classname="hudson.plugins.jacoco.JacocoPublisherTest" time="0.308"/>
    <testcase name="testResolveFilePathsReplace" classname="hudson.plugins.jacoco.JacocoPublisherTest" time="0.001"/>
    <testcase name="testResolveFilePathsException" classname="hudson.plugins.jacoco.JacocoPublisherTest" time="0.003"/>
    <testcase name="testResolveFilePathsAbstractBuildNoReplace" classname="hudson.plugins.jacoco.JacocoPublisherTest" time="0.054"/>
    <testcase name="testResolveFilePathsAbstractBuildReplace" classname="hudson.plugins.jacoco.JacocoPublisherTest" time="0.001"/>
    <testcase name="testResolveFilePathsAbstractBuildException" classname="hudson.plugins.jacoco.JacocoPublisherTest" time="0.002"/>
    <testcase name="testLocateReports" classname="hudson.plugins.jacoco.JacocoPublisherTest" time="0.003"/>
    <testcase name="testPerformWithDefaultSettings" classname="hudson.plugins.jacoco.JacocoPublisherTest" time="0.161"/>
    <testcase name="testCheckResult" classname="hudson.plugins.jacoco.JacocoPublisherTest" time="0.011"/>
    <testcase name="testSkipCopyOfSrcFilesTrue" classname="hudson.plugins.jacoco.JacocoPublisherTest" time="0.039"/>
    <testcase name="testSkipCopyOfSrcFilesFalse" classname="hudson.plugins.jacoco.JacocoPublisherTest" time="0.023"/>
    <testcase name="testCopyClassAndSource" classname="hudson.plugins.jacoco.JacocoPublisherTest" time="0.036"/>
    <testcase name="testCopyClass_Wrong" classname="hudson.plugins.jacoco.JacocoPublisherTest" time="0.029"/>
    <testcase name="testPerformWithBuildOverBuild" classname="hudson.plugins.jacoco.JacocoPublisherTest" time="0.26"/>
  </testsuite>
  <testsuite name="hudson.plugins.jacoco.report.CoverageReportTest" time="0.002">
    <testcase name="testGetBuild" classname="hudson.plugins.jacoco.report.CoverageReportTest" time="0.001"/>
    <testcase name="testThresholds" classname="hudson.plugins.jacoco.report.CoverageReportTest" time="0.001"/>
    <testcase name="testName" classname="hudson.plugins.jacoco.report.CoverageReportTest" time="0.0"/>
    <testcase name="testDoJaCoCoExec" classname="hudson.plugins.jacoco.report.CoverageReportTest" time="0.0"/>
  </testsuite>
  <testsuite name="hudson.plugins.jacoco.report.MethodReportTest" time="0.002">
    <testcase name="testChildren" classname="hudson.plugins.jacoco.report.MethodReportTest" time="0.001"/>
    <testcase name="testPrint" classname="hudson.plugins.jacoco.report.MethodReportTest" time="0.0"/>
    <testcase name="testChildrenRemovePkgName" classname="hudson.plugins.jacoco.report.MethodReportTest" time="0.0"/>
    <testcase name="testMissingFile" classname="hudson.plugins.jacoco.report.MethodReportTest" time="0.001"/>
  </testsuite>
  <testsuite name="hudson.plugins.jacoco.portlet.bean.JacocoCoverageResultSummaryTest" time="0.003">
    <testcase name="constructor" classname="hudson.plugins.jacoco.portlet.bean.JacocoCoverageResultSummaryTest" time="0.0"/>
    <testcase name="addCoverageResults" classname="hudson.plugins.jacoco.portlet.bean.JacocoCoverageResultSummaryTest" time="0.001"/>
    <testcase name="setCoverageResults" classname="hudson.plugins.jacoco.portlet.bean.JacocoCoverageResultSummaryTest" time="0.001"/>
    <testcase name="testCoverageSetterGetter" classname="hudson.plugins.jacoco.portlet.bean.JacocoCoverageResultSummaryTest" time="0.001"/>
  </testsuite>
  <testsuite name="hudson.plugins.jacoco.report.AbstractReportTest" time="0.001">
    <testcase name="test" classname="hudson.plugins.jacoco.report.AbstractReportTest" time="0.001"/>
  </testsuite>
  <testsuite name="hudson.plugins.jacoco.model.CoverageObjectTest" time="0.0">
    <testcase name="testConstruct" classname="hudson.plugins.jacoco.model.CoverageObjectTest" time="0.0"/>
  </testsuite>
  <testsuite name="hudson.plugins.jacococoveragecolumn.CoverageRangeTest" time="0.005">
    <testcase name="testAbyssmal" classname="hudson.plugins.jacococoveragecolumn.CoverageRangeTest" time="0.0"/>
    <testcase name="test" classname="hudson.plugins.jacococoveragecolumn.CoverageRangeTest" time="0.004"/>
    <testcase name="testFillColorOf87" classname="hudson.plugins.jacococoveragecolumn.CoverageRangeTest" time="0.001"/>
  </testsuite>
  <testsuite name="hudson.plugins.jacoco.report.ClassReportTest" time="0.002">
    <testcase name="testChildren" classname="hudson.plugins.jacoco.report.ClassReportTest" time="0.0"/>
    <testcase name="testSourceFile" classname="hudson.plugins.jacoco.report.ClassReportTest" time="0.0"/>
    <testcase name="testPrint" classname="hudson.plugins.jacoco.report.ClassReportTest" time="0.001"/>
    <testcase name="testName" classname="hudson.plugins.jacoco.report.ClassReportTest" time="0.0"/>
    <testcase name="testToString" classname="hudson.plugins.jacoco.report.ClassReportTest" time="0.001"/>
  </testsuite>
  <testsuite name="hudson.plugins.jacoco.report.AggregatedReportTest" time="0.884">
    <testcase name="testClassCoverage" classname="hudson.plugins.jacoco.report.AggregatedReportTest" time="0.0"/>
    <testcase name="testSetFailed" classname="hudson.plugins.jacoco.report.AggregatedReportTest" time="0.884"/>
  </testsuite>
  <testsuite name="hudson.plugins.jacoco.portlet.JacocoDeltaCoverageResultSummaryTest" time="0.03">
    <testcase name="deltaCoverageSummaryForBetterBuildTest" classname="hudson.plugins.jacoco.portlet.JacocoDeltaCoverageResultSummaryTest" time="0.029"/>
    <testcase name="deltaCoverageSummaryForWorseBuildTest" classname="hudson.plugins.jacoco.portlet.JacocoDeltaCoverageResultSummaryTest" time="0.001"/>
  </testsuite>
</testrun>
